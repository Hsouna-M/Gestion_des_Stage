@startuml Gestion de Stage

class db {
  - static instance 
  - static connect(): PDO
  - getInstance() : instance : PDO
}

class abstractModel{
  - database  
}

db <|-- abstractModel 

class etudiantModel{
  + create(Etudiant e) : bool
  + update(Etudiant e) : bool
  + delete(Etudiant e) : bool
  + read_by(nce) : assoc_array  
  + read_by(nom) : assoc_array  
  + read_by(prenom) : assoc_array  
  + read_by(classe) : assoc_array  
}
 
 etudiantModel ..> Etudiant
 etudiantModel --|> abstractModel 

class Etudiant {
  NCE : entier
  nom : chaine
  prenom : chaine
  classe : chaine
  geters_and_setters()
  }

class Enseignant {
  Matricule : entier
  nom_Ens : chaine
  prenom_Ens : chaine
  geters_and_setters()
  }

class enseignantModel{
  + create(Enseignant e) : bool
  + update(Enseignant e) : bool
  + delete(Enseignant e) : bool
  + read_by(matricule) : assoc_array  
  + read_by(nom) : assoc_array  
  + read_by(prenom) : assoc_array  
}

class Soutenance {
  Numjury : entier
  date_soutenance : chaine
  note : rÃ©el
  Nce : entier
  Matricule : entier  
  geters_and_setters()
}

class soutenanceModel{
  + create(Soutenance s) : bool
  + update(Soutenance s) : bool
  + delete(Soutenance s) : bool
  + read_by(numjury) : assoc_array  
  + read_by(date) : assoc_array  
  + read_by(note) : assoc_array  
  + read_by(nce) : assoc_array  
  + read_by(matricule) : assoc_array  
}

class Administrateur {
  id_admin : entier
  name : chaine
  mot_de_passe : chaine
  geters_and_setters()
}

class adminModel{
  + read(Administrateur $admin)):assoc_array  
  + create(Administrateur $admin)):bool  
}

LoginController ..> adminModel
abstractModel <|-- adminModel
abstractModel <|-- soutenanceModel 
abstractModel <|-- enseignantModel 
Enseignant <.. enseignantModel 
Soutenance <.. soutenanceModel 

class LoginController{
  - login(Administrateur a) : bool
  - loadAdminPannel() : view
}

adminModel ..> Administrateur

class abstractController{
  + loadBadRequestview() 
}

LoginController --|> abstractController

@enduml